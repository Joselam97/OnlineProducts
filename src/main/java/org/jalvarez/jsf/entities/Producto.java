package org.jalvarez.jsf.entities;

import jakarta.persistence.*;
import jakarta.validation.constraints.Min;
import jakarta.validation.constraints.NotEmpty;
import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Size;

import java.time.LocalDate;

@Entity // Marks this class as a JPA entity mapped to a database table
@Table(name = "productos") // Specifies the table name for this entity
public class Producto {


    @Id // Denotes the primary key field
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    // Specifies that the ID is auto-generated by the database
    private Long id;

    // Validates that the `nombre` field is not null or empty
    @NotEmpty
    private String nombre;

    // Ensures the `precio` field is not null
    @NotNull
    @Min(5) // Validates that `precio` is at least 5
    private Integer precio;

    // Ensures the `sku` field is not null or empty
    @NotEmpty
    @Size(min = 3, max = 10) // Validates that `sku` length is between 3 and 10 characters
    private String sku;

    // Ensures the `fechaRegistro` field is not null
    @NotNull
    @Column(name = "fecha_registro") // Maps this field to the "fecha_registro" column in the database
    private LocalDate fechaRegistro;

    // Ensures the `categoria` field is not null
    @NotNull
    // Establishes a many-to-one relationship with the `Categoria` entity
    // Fetch type is LAZY to defer loading until accessed
    @ManyToOne(fetch = FetchType.LAZY)
    private Categoria categoria;

    // Default constructor for JPA
    public Producto() {
    }

    public Producto(String nombre) {
        this.nombre = nombre;
    }


    public String getNombre() {
        return nombre;
    }

    public void setNombre(String nombre) {
        this.nombre = nombre;
    }

    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public Integer getPrecio() {
        return precio;
    }

    public void setPrecio(Integer precio) {
        this.precio = precio;
    }

    public String getSku() {
        return sku;
    }

    public void setSku(String sku) {
        this.sku = sku;
    }

    public LocalDate getFechaRegistro() {
        return fechaRegistro;
    }

    public void setFechaRegistro(LocalDate fechaRegistro) {
        this.fechaRegistro = fechaRegistro;
    }

    //@PrePersist
    public void prePersist() {
        // Sets the registration date to the current date before persisting the entity
        fechaRegistro = LocalDate.now();
    }

    public Categoria getCategoria() {
        return categoria;
    }

    public void setCategoria(Categoria categoria) {
        this.categoria = categoria;
    }

    @Override
    public String toString() {
        // Generates a string representation of the product
        return "{" +
                "id: " + id +
                ", nombre: '" + nombre + '\'' +
                ", precio: " + precio +
                ", sku: '" + sku + '\'' +
                ", fechaRegistro: " + fechaRegistro +
                '}';
    }
}
